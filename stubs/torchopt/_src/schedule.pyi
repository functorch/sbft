"""
This type stub file was generated by pyright.
"""

from torchopt._src import base
from torchopt._src.typing import Scalar

def polynomial_schedule(init_value: Scalar, end_value: Scalar, power: Scalar, transition_steps: int, transition_begin: int = ...) -> base.Schedule:
    """Constructs a schedule with polynomial transition from init to end value.

    Args:
        init_value: Initial value for the scalar to be annealed.
        end_value: End value of the scalar to be annealed.
        power: The power of the polynomial used to transition from ``init`` to ``end``.
        transition_steps:
            Number of steps over which annealing takes place, the scalar starts changing at
            ``transition_begin`` steps and completes the transition by
            ``transition_begin + transition_steps`` steps.
            If ``transition_steps <= 0``, then the entire annealing process is disabled and the
            value is held fixed at ``init_value``.
        transition_begin:
            Must be *positive*. After how many steps to start annealing (before this many steps the
            scalar value is held fixed at ``init_value``).

    Returns:
        schedule:
            A function that maps step counts to values.
    """
    ...

def linear_schedule(init_value: Scalar, end_value: Scalar, transition_steps: int, transition_begin: int = ...) -> base.Schedule:
    """Alias polynomial schedule to linear schedule for convenience."""
    ...

